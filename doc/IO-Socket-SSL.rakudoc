=begin pod

=head1 NAME

IO::Socket::SSL - interface for SSL connection

=head1 SYNOPSIS

=begin code :lang<raku>

use IO::Socket::SSL;
my $ssl = IO::Socket::SSL.new(:host<example.com>, :port(443));
if $ssl.print("GET / HTTP/1.1\r\n\r\n") {
    say $ssl.recv;
}

=end code

=head1 DESCRIPTION

This module provides an interface for SSL connections.

It uses C to setting up the connection so far (hope it will change soon).

=head1 METHODS

=head2 method new

=begin code :lang<raku>

method new(*%params) returns IO::Socket::SSL

=end code

Gets params like:

=item encoding             : connection's encoding
=item input-line-separator : specifies how lines of input are separated

for client state:
=item host : host to connect
=item port : port to connect

for server state:
=item localhost : host to use for the server
=item localport : port for the server
=item listen    : create a server and listen for a new incoming connection
=item certfile  : path to a file with certificates

=head2 method recv

=begin code :lang<raku>

method recv(IO::Socket::SSL:, Int $n = 1048576, Bool :$bin = False)

=end code

Reads $n bytes from the other side (server/client).

Bool :$bin if we want it to return Buf instead of Str.

=head2 method print

=begin code :lang<raku>

method print(IO::Socket::SSL:, Str $s)

=end code

=head2 method send

DEPRECATED. Use C<.print> instead

=begin code :lang<raku>

method send(IO::Socket::SSL:, Str $s)

=end code

Sends $s to the other side (server/client).

=head2 method accept

=begin code :lang<raku>

method accept(IO::Socket::SSL:);

=end code

Waits for a new incoming connection and accepts it.

=head2 close

=begin code :lang<raku>

method close(IO::Socket::SSL:)

=end code

Closes the connection.

=head1 SEE ALSO

L<OpenSSL>

=head1 EXAMPLE

To download sourcecode of e.g. github.com:

=begin code :lang<raku>

use IO::Socket::SSL;
my $ssl = IO::Socket::SSL.new(:host<github.com>, :port(443));
my $content = Buf.new;
$ssl.print("GET /\r\n\r\n");
while my $read = $ssl.recv {
    $content ~= $read;
}
say $content;

=end code

=head1 AUTHOR

=item Filip Sergot

Source can be located at: https://github.com/raku-community-modules/IO-Socket-SSL .
Comments and Pull Requests are welcome.

=head1 COPYRIGHT AND LICENSE

Copyright 2014 - 2022 Filip Sergot

Copyright 2023 - 2025 The Raku Community

This library is free software; you can redistribute it and/or modify it under the MIT License.

=end pod

# vim: expandtab shiftwidth=4
